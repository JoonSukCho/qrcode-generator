import Head from 'next/head';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { QRCodeCanvas } from 'qrcode.react';
import { useRef, useState } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [inputValue, setInputValue] = useState('https://');
  const [qrValue, setQRValue] = useState('https://');
  const [qrSize, setQRSize] = useState<number>(300);

  const downloadQR = () => {
    const canvasElement = document.getElementById(
      'qr-code-canvas'
    ) as HTMLCanvasElement;

    if (canvasElement) {
      const pngUrl = canvasElement
        .toDataURL('image/png')
        .replace('image/png', 'image/octet-stream');
      let downloadLink = document.createElement('a');
      downloadLink.href = pngUrl;
      downloadLink.download = 'qr_code.png';
      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    }
  };

  const onChangeQrSize = (e: React.ChangeEvent<HTMLInputElement>) => {
    setQRSize(Number(e.target.value));
  };
  const onChangeURL = (e: React.ChangeEvent<HTMLInputElement>) => {
    setInputValue(e.target.value);
  };

  const generateQRCode = () => {
    setQRValue(inputValue);
  };

  return (
    <>
      <Head>
        <title>QR Code Generator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <QRCodeCanvas
          id="qr-code-canvas"
          value={qrValue}
          size={qrSize}
          level={'H'}
          includeMargin
        />
        <div className={styles.qrInformation}>
          <div className={styles.inputWrapper}>
            <label>QRCode Size</label>
            <input
              className={styles.qrInput}
              type="number"
              value={qrSize}
              onChange={onChangeQrSize}
            />
            <label className={styles.mt_4}>URL</label>
            <input
              className={styles.qrInput}
              type="text"
              value={inputValue}
              onChange={onChangeURL}
            />
          </div>

          <div className={styles.buttonContainer}>
            <button className={styles.button} onClick={generateQRCode}>
              생성하기
            </button>
            <a className={styles.button} onClick={downloadQR}>
              이미지 다운로드
            </a>
          </div>
        </div>
      </main>
    </>
  );
}
